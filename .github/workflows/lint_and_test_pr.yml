name: Lint and Test PR
on:
  pull_request:
    paths-ignore:
    - "README.md"
    - "Makefile"
    - "Dockerfile"

jobs:
#  lint-testing:
#    name: Code Formatting Tests
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v1
#      with:
#        python-version: 3.8
#    - name: Install dependencies
#      run: |
#        python -m pip install -U pip
#        pip install -r requirements-dev.txt
#    - name: Code Formatting Tests
#      working-directory: ${{ github.workspace }}
#      run: |
#        make lint
#  type-testing:
#    name: Type Tests
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v1
#      with:
#        python-version: 3.8
#    - name: Install dependencies
#      run: |
#        python -m pip install -U pip
#        pip install -r requirements-dev.txt
#    - name: Type Checking
#      working-directory: ${{ github.workspace }}
#      run: |
#        make types
#  data-validation:
#    name: Rasa Data Validation
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v1
#      with:
#        python-version: 3.8
#    - name: Install dependencies
#      run: |
#        python -m pip install -U pip
#        pip install -r requirements-dev.txt
#    - name: Rasa Data Validation
#      working-directory: ${{ github.workspace }}
#      run: |
#        make validate
  training-testing:
    name: Testing Stories
    runs-on: ubuntu-latest
    needs: [data-validation]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements-dev.txt
    - name: Test Training Stories
      working-directory: ${{ github.workspace }}
      run: |
        make test
    - name: Cross-validate NLU model
      run: |
        make crossval
    - name: post cross-val results to PR
      uses: amn41/comment-on-pr@comment-file-contents
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: results.md
#    - name: Upload model
#      if: github.ref == 'refs/heads/master'
#      uses: actions/upload-artifact@master
#      with:
#        name: model
#        path: models